version: "3.8"
services:
  frontend:
    # image: node:18
    build:
      context: ./frontend
    container_name: frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    env_file:
      - .env
    command: ["npm", "run", "dev"]
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis # めめ追加 : Redisサービスへの依存関係を追加
    networks:
      - app-network

  db:
    image: postgres:13
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - app-network

  functions: # ここからFirebase Cloud Functionsの追加
    image: firebase_functions
    container_name: firebase_functions
    working_dir: /workspace/functions
    volumes:
      - ./functions:/workspace/functions
    env_file:
      - .env
    environment:
      - FIREBASE_CONFIG=${FIREBASE_CONFIG}
      - GOOGLE_APPLICATION_CREDENTIALS=/workspace/functions/service-account.json
    ports:
      - "5001:5001" # Firebase Functionsのエミュレーター用ポート
    networks:
      - app-network
    depends_on:
      - backend # 必要に応じてbackendに依存させる
  # Firebase Cloud Functionsの追加ここまで

  # Redisサービスの定義
  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
  
  playwright: # Playwrightサービスの追加
    image: mcr.microsoft.com/playwright:focal
    container_name: playwright
    working_dir: /e2e
    volumes:
      - ./e2e:/e2e
    env_file:
      - .env
    networks:
      - app-network
    depends_on:
      - frontend
      - backend
    command: ["npx", "playwright", "test"]

  jmeter:
    build:
      context: ./jmeter
    container_name: jmeter
    volumes:
      - ./jmeter/results:/results
    networks:
      - app-network



networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
